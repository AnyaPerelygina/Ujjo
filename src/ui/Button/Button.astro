---
import { Icon } from 'astro-icon/components'
import type { HTMLTag, Polymorphic } from 'astro/types'

type Props<Tag extends HTMLTag> = Polymorphic<
  { as: Tag } & {
    text?: string
    className?: string
    mods?: string[]
    size?: 'xl' | 'lg' | 'md' | 'sm' | 'xs'
    icon?: string
    iconPosBefore?: boolean
  }
>

const {
  as: Tag = 'button',
  className,
  text,
  mods,
  size,
  icon,
  iconPosBefore,
  ...props
} = Astro.props
---

<Tag
  class:list={[
    'button',
    size ? `button--${size}` : '',
    mods?.map((el: string) => `button--${el}`),
    className
  ]}
  {...props}
>
  {
    icon && iconPosBefore && (
      <span class="button__icon">
        <Icon name={icon} />
      </span>
    )
  }

  <span class="button__text" set:html={text} />

  {
    icon && !iconPosBefore && (
      <span class="button__icon">
        <Icon name={icon} />
      </span>
    )
  }
</Tag>
